/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./js/main.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./js/main.js":
/*!********************!*\
  !*** ./js/main.js ***!
  \********************/
/*! no static exports found */
/***/ (function(module, exports) {

// import {iosVhFix} from './utils/ios-vh-fix';
// import {initModals} from './modules/modals/init-modals';
// import {Form} from './modules/form-validate/form';

// ---------------------------------

window.addEventListener('DOMContentLoaded', function () {
  //  МАСКА ДЛЯ ВВОДА НОМЕРА ТЕЛЕФОНА
  var phoneInput = document.querySelectorAll('input[type=tel]');
  if (phoneInput) {
    var getInputNumbersValue = function getInputNumbersValue(input) {
      return input.value.replace(/\D/g, '');
    };
    var onPhoneInput = function onPhoneInput(e) {
      var input = e.target;
      var inputNumbersValue = getInputNumbersValue(input);
      var formatedInputValue = '';
      if (!inputNumbersValue) {
        input.value = '';
      }
      if (['7', '8', '9'].indexOf(inputNumbersValue[0]) > -1) {
        // russian number
        if (inputNumbersValue[0] === '9') {
          inputNumbersValue = '7' + inputNumbersValue;
        }
        var firstSymbols = '+7(';
        formatedInputValue = firstSymbols;
        if (inputNumbersValue.length > 1) {
          formatedInputValue += inputNumbersValue.substring(1, 4);
        }
        if (inputNumbersValue.length >= 5) {
          formatedInputValue += ') ' + inputNumbersValue.substring(4, 7);
        }
        if (inputNumbersValue.length >= 8) {
          formatedInputValue += '-' + inputNumbersValue.substring(7, 9);
        }
        if (inputNumbersValue.length >= 10) {
          formatedInputValue += '-' + inputNumbersValue.substring(9, 11);
        }
      } else {
        // not russian number
        formatedInputValue = '+' + inputNumbersValue.substring(0, 16);
      }
      input.value = formatedInputValue;
    };
    var onPhonedelete = function onPhonedelete(e) {
      var input = e.target;
      if (e.keyCode === 8 && getInputNumbersValue(input).length === 1) {
        input.value = '';
      }
    };
    for (var i = 0; i < phoneInput.length; i++) {
      var input = phoneInput[i];
      input.addEventListener('input', onPhoneInput);
      input.addEventListener('keydown', onPhonedelete);
    }
  }

  // КНОПКА "ПОДРОБНЕЕ"

  var openButton = document.querySelector('#about-company-button');
  var textContainer = document.querySelector('.about-company__text-container');
  if (openButton && textContainer) {
    var onOpenButtonClick = function onOpenButtonClick(e) {
      textContainer.classList.toggle('about-company__text-container--close');
      textContainer.classList.toggle('about-company__text-container--open');
      if (textContainer.classList.contains('about-company__text-container--open')) {
        e.target.textContent = 'Свернуть';
      } else {
        e.target.textContent = 'Подробнее';
      }
    };
    openButton.addEventListener('click', onOpenButtonClick);
  }

  // ФОРМА И ЧЕКБОКС НА ГЛАВНОЙ СТРАНИЦЕ
  var contactForm = document.querySelector('.contact-form__form');
  var contactFormContainer = document.querySelector('.contact-form__confirm-container');
  var contactCheckbox = document.querySelector('#input-agreement');
  var erorr = document.createElement('div');
  erorr.textContent = 'Необходимо дать согласие';
  erorr.setAttribute('id', 'error');
  var onSubmitContactForm = function onSubmitContactForm(evt) {
    evt.preventDefault();
    if (!contactCheckbox.checked) {
      if (contactFormContainer.querySelectorAll('#error').length === 0) {
        contactFormContainer.appendChild(erorr);
      }
    } else {
      contactForm.submit();
    }
  };
  var onModalCheckboxChange = function onModalCheckboxChange() {
    if (contactFormContainer.querySelectorAll('#error').length > 0) {
      contactFormContainer.removeChild(erorr);
    }
  };
  contactForm.addEventListener('submit', onSubmitContactForm);
  contactCheckbox.addEventListener('change', onModalCheckboxChange);

  // МОДАЛЬНОЕ ОКНО

  var modal = document.querySelector('.modal');
  var modalOpenButton = document.querySelector('#header-button');
  var modalCloseButton = document.querySelector('#modal-close-button');
  var modalForm = document.querySelector('.modal__form');
  var nameInput = document.querySelector('#modal-input-name');
  var html = document.querySelector('html');
  var modalCheckbox = document.querySelector('#modal-checkbox');
  if (modal && modalOpenButton && modalCloseButton && modalForm && nameInput && modalCheckbox) {
    var onCloseModalButtonClick = function onCloseModalButtonClick() {
      modal.classList.add('modal--close');
      html.setAttribute('style', 'overflow-y: auto;');
    };
    var onEscKeydown = function onEscKeydown(e) {
      if (e.keyCode === 27) {
        modal.classList.add('modal--close');
        html.setAttribute('style', 'overflow-y: auto;');
      }
    };
    var onFolderClick = function onFolderClick(e) {
      if (e.target === modal) {
        modal.classList.add('modal--close');
        html.setAttribute('style', 'overflow-y: auto;');
      }
    };
    var onSubmitModalForm = function onSubmitModalForm(evt) {
      evt.preventDefault();
      if (!modalCheckbox.checked) {
        if (modalForm.querySelectorAll('#error').length === 0) {
          modalForm.appendChild(erorr);
        }
      } else {
        modalForm.submit();
        modal.classList.add('modal--close');
        html.setAttribute('style', 'overflow-y: auto;');
      }
    };
    var _onModalCheckboxChange = function _onModalCheckboxChange() {
      if (modalForm.querySelectorAll('#error').length > 0) {
        modalForm.removeChild(erorr);
      }
    };
    modalCheckbox.addEventListener('change', _onModalCheckboxChange);
    var onOpenModalButtonClick = function onOpenModalButtonClick() {
      modal.classList.remove('modal--close');
      html.setAttribute('style', 'overflow-y: hidden;');
      nameInput.focus();
      modalCloseButton.addEventListener('click', onCloseModalButtonClick);
      document.addEventListener('keydown', onEscKeydown);
      modalForm.addEventListener('submit', onSubmitModalForm);
      document.addEventListener('click', onFolderClick);
    };
    modalOpenButton.addEventListener('click', onOpenModalButtonClick);
  }

  // ТАБЫ В МОБИЛЬНОМ ФУТЕРЕ

  var navigationButton = document.querySelector('#navigation-button');
  var contactsButton = document.querySelector('#contacts-button');
  var navigation = document.querySelector('#navigation-list');
  var contacts = document.querySelector('#contacts-container');
  navigationButton.classList.add('navigation__button--open');
  contactsButton.classList.add('contacts__button--open');
  navigation.classList.add('navigation__list--close');
  contacts.classList.add('contacts__container--close');
  if (navigationButton && navigation) {
    var onNavButtonClick = function onNavButtonClick() {
      navigation.classList.toggle('navigation__list--close');
      navigationButton.classList.toggle('navigation__button--open');
      if (!contacts.classList.contains('contacts__container--close')) {
        contacts.classList.add('contacts__container--close');
        contactsButton.classList.add('contacts__button--open');
      }
    };
    navigationButton.addEventListener('click', onNavButtonClick);
  }
  if (contactsButton && contacts) {
    var onContactsButtonClick = function onContactsButtonClick() {
      contacts.classList.toggle('contacts__container--close');
      contactsButton.classList.toggle('contacts__button--open');
      if (!navigation.classList.contains('navigation__list--close')) {
        navigation.classList.add('navigation__list--close');
        navigationButton.classList.add('navigation__button--open');
      }
    };
    contactsButton.addEventListener('click', onContactsButtonClick);
  }

  // Utils
  // ---------------------------------

  // iosVhFix();

  // // Modules
  // // ---------------------------------

  // // все скрипты должны быть в обработчике 'DOMContentLoaded', но не все в 'load'
  // // в load следует добавить скрипты, не участвующие в работе первого экрана
  // window.addEventListener('load', () => {
  //   initModals();
  //   const form = new Form();
  //   window.form = form;
  //   form.init();
  // });
});

// ---------------------------------

// ❗❗❗ обязательно установите плагины eslint, stylelint, editorconfig в редактор кода.

// привязывайте js не на классы, а на дата атрибуты (data-validate)

// вместо модификаторов .block--active используем утилитарные классы
// .is-active || .is-open || .is-invalid и прочие (обязателен нейминг в два слова)
// .select.select--opened ❌ ---> [data-select].is-open ✅

// выносим все в дата атрибуты
// url до иконок пинов карты, настройки автопрокрутки слайдера, url к json и т.д.

// для адаптивного JS используется matchMedia и addListener
// const breakpoint = window.matchMedia(`(min-width:1024px)`);
// const breakpointChecker = () => {
//   if (breakpoint.matches) {
//   } else {
//   }
// };
// breakpoint.addListener(breakpointChecker);
// breakpointChecker();

// используйте .closest(el)

/***/ })

/******/ });
//# sourceMappingURL=main.min.js.map